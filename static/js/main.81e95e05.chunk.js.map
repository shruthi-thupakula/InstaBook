{"version":3,"sources":["assets/InstaBook.jpg","components/TopNav.js","components/SideBar.js","utils.js","Feed/index.js","Album/index.js","Friends/index.js","Tasks/index.js","MyProfile/index.js","Feed/PostComments.js","Album/Photos.js","Friends/UserPosts.js","Login/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","props","classes","open","location","useLocation","AppBar","position","className","clsx","appBar","appBarShift","Toolbar","Typography","variant","noWrap","currentMenuItem","menu","find","menuItem","pathname","includes","path","text","_getName","SideBar","handleChangeLoginState","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","Box","textAlign","src","InstaBookLogo","alt","Divider","List","map","style","textDecoration","activeStyle","color","to","key","ListItem","button","ListItemIcon","icon","ListItemText","primary","secondMenu","secondMenuItem","onClick","logoutItem","getRandomColor","letters","split","i","Math","floor","random","length","Feed","state","post","isLoaded","getPosts","bind","fetch","this","then","res","json","data","console","log","setState","prevState","fontSize","Grid","container","pIndex","Card","backgroundColor","margin","CardActionArea","CardContent","width","height","ShortText","component","gutterBottom","title","CardActions","JSON","stringify","Button","size","React","Component","Album","getAlbum","a","album","display","justifyContent","flexDirection","flex","CardMedia","image","id","mb","mr","Friends","users","getUser","user","username","marginLeft","CardHeader","avatar","Avatar","name","charAt","subheader","email","mt","Todos","todos","getTodo","item","xs","filter","todo","completed","WorkRounded","CheckCircleOutline","HighlightOffOutlined","picture","PicturesList","_","maxWidth","IconButton","CloudDownload","PostComments","getComments","parse","match","params","comments","prevProps","body","QuestionAnswer","comment","Photos","getPhotos","albumId","photos","photo","UserPosts","posts","AspectRatioRounded","Login","useState","setEmail","password","setPassword","spacing","Container","fontWeight","fontFamily","instaBook","TextField","value","onChange","e","target","label","type","alert","useStyles","makeStyles","theme","root","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","menuButton","marginRight","hide","flexShrink","alignItems","padding","mixins","toolbar","content","flexGrow","contentShift","PhotoLibraryRounded","PeopleRounded","Tasks","AccountCircleRounded","Myprofile","PowerSettingsNewRounded","App","useTheme","isLoggedIn","setOpen","handleDrawerOpen","handleDrawerClose","status","basename","process","CssBaseline","exact","render","index","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81e95e05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/InstaBook.2aa558cb.jpg\";","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { menu } from \"../App\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const TopNavBar = props => {\r\n  const { classes, open } = props;\r\n\r\n  const location = useLocation();\r\n  const _getName = () => {\r\n    const currentMenuItem = menu.find(menuItem =>\r\n      location.pathname.includes(menuItem.path)\r\n    );\r\n\r\n    if (currentMenuItem) {\r\n      return currentMenuItem.text;\r\n    } else return \"Insta Book\";\r\n  };\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: open\r\n      })}\r\n    >\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          {_getName()}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { secondMenu, menu, logoutItem } from \"../App\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport InstaBookLogo from \"../assets/InstaBook.jpg\";\r\nexport const SideBar = props => {\r\n  const { classes = {}, open, handleChangeLoginState } = props;\r\n\r\n  const handleLogoutClick = () => {\r\n    handleChangeLoginState(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      open={open}\r\n      classes={{\r\n        paper: classes.drawerPaper\r\n      }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <Box textAlign=\"left\">\r\n          <img src={InstaBookLogo} alt=\"instaBokLogo\" />\r\n        </Box>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {menu.map(menuItem => (\r\n          <NavLink\r\n            style={{ textDecoration: \"none\" }}\r\n            activeStyle={{\r\n              color: \"red\"\r\n            }}\r\n            to={menuItem.path}\r\n            key={menuItem.path}\r\n          >\r\n            <ListItem button key={menuItem.text}>\r\n              <ListItemIcon>{menuItem.icon}</ListItemIcon>\r\n              <ListItemText primary={menuItem.text} />\r\n            </ListItem>\r\n          </NavLink>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {secondMenu.map(secondMenuItem => (\r\n          <ListItem button key={secondMenuItem.text}>\r\n            <ListItemIcon>{secondMenuItem.icon}</ListItemIcon>\r\n            <ListItemText primary={secondMenuItem.text} />\r\n          </ListItem>\r\n        ))}\r\n        <ListItem button key={\"logout\"} onClick={handleLogoutClick}>\r\n          <ListItemIcon>{logoutItem.icon}</ListItemIcon>\r\n          <ListItemText primary={logoutItem.text} />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n","export const getRandomColor = () => {\r\n  var letters = \"6789ABCDEF\".split(\"\");\r\n  var color = \"#\";\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * letters.length)];\r\n  }\r\n  return color;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardActions,\r\n  Card,\r\n  Button,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { ShortText } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getRandomColor } from \"../utils\";\r\nexport default class Feed extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { post: [], isLoaded: 0 };\r\n    this.getPosts = this.getPosts.bind(this);\r\n  }\r\n\r\n  async getPosts() {\r\n    await fetch(\r\n      `https://jsonplaceholder.typicode.com/posts/?_limit=6_&start=${this.state.isLoaded}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          post: [...prevState.post, ...data],\r\n          isLoaded: prevState.isLoaded + 5\r\n        }));\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.getPosts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"left\", fontSize: \"17px\" }}>\r\n        <Grid container>\r\n          {this &&\r\n            this.state &&\r\n            this.state.post &&\r\n            this.state.post.map((post, pIndex) => (\r\n              <Card\r\n                style={{\r\n                  backgroundColor: getRandomColor(),\r\n\r\n                  margin: 10\r\n                }}\r\n              >\r\n                <CardActionArea>\r\n                  <CardContent style={{ width: 345, height: 150 }}>\r\n                    <ShortText />\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    />\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                      {post.title}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={`/post/${JSON.stringify(post)}`}\r\n                  >\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Read Post\r\n                    </Button>\r\n                  </Link>\r\n                </CardActions>\r\n              </Card>\r\n            ))}\r\n        </Grid>{\" \"}\r\n        <Button onClick={() => this.getPosts()} size=\"small\" variant=\"outlined\">\r\n          Load More Posts\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  CardContent,\r\n  CardActions,\r\n  Card,\r\n  Button,\r\n  CardMedia,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getRandomColor } from \"../utils\";\r\n\r\nexport default class Album extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { album: [], isLoaded: 0 };\r\n    this.getAlbum = this.getAlbum.bind(this);\r\n  }\r\n  getAlbum = async () => {\r\n    await fetch(\r\n      `https://jsonplaceholder.typicode.com/albums/?_limit=5_&start=${this.state.isLoaded}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          album: [...prevState.album, ...data],\r\n          isLoaded: prevState.isLoaded + 5\r\n        }));\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getAlbum();\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"left\", fontSize: \"17px\" }}>\r\n        {this &&\r\n          this.state &&\r\n          this.state.album &&\r\n          this.state.album.map((album, pIndex) => (\r\n            <Card style={{ margin: 10 }}>\r\n              <Box style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n\r\n                    flexDirection: \"column\"\r\n                  }}\r\n                >\r\n                  <CardContent style={{ flex: \"1 0 auto\" }}>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                      Album\r\n                    </Typography>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                      {album.title}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </div>\r\n                <CardMedia\r\n                  style={{\r\n                    width: \"100px\",\r\n                    backgroundColor: getRandomColor()\r\n                  }}\r\n                  image={`https://picsum.photos/id/${album.id}/500/500`}\r\n                  title={album.title}\r\n                />\r\n              </Box>\r\n              <CardActions>\r\n                <Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  to={`/album/${album.id}`}\r\n                >\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    View Pictures\r\n                  </Button>\r\n                </Link>\r\n              </CardActions>\r\n            </Card>\r\n          ))}\r\n        <Box textAlign=\"right\" mb={2} mr={2}>\r\n          <Button\r\n            onClick={() => this.getAlbum()}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            Load More\r\n          </Button>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  CardContent,\r\n  Typography,\r\n  Card,\r\n  Box,\r\n  CardHeader,\r\n  Avatar\r\n} from \"@material-ui/core\";\r\nimport { getRandomColor } from \"../utils\";\r\n\r\nexport default class Friends extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { users: [], isLoaded: 0 };\r\n    this.getUser = this.getUser.bind(this);\r\n  }\r\n  async getUser() {\r\n    await fetch(\r\n      `https://jsonplaceholder.typicode.com/users/?_limit=5_&start=${this.state.isLoaded}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          users: [...prevState.users, ...data],\r\n          isLoaded: prevState.isLoaded + 5\r\n        }));\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.getUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"left\", fontSize: \"17px\" }}>\r\n        {// this && */}\r\n        // this.state &&\r\n        // this.state.user &&\r\n        this.state.users.map((user, pIndex) => (\r\n          <Card key={pIndex} style={{ margin: \"15px\" }}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Box\r\n                key={user.username}\r\n                style={{ marginLeft: \"25px\" }}\r\n                textAlign=\"left\"\r\n              >\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      fontSize=\"small\"\r\n                      style={{ backgroundColor: getRandomColor() }}\r\n                    >\r\n                      {user.name.charAt(0)}\r\n                    </Avatar>\r\n                  }\r\n                  title={user.name}\r\n                  subheader={user.email}\r\n                />\r\n                <CardContent>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    @{user.username}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Box>\r\n              <Link\r\n                style={{ textDecoration: \"none\" }}\r\n                to={`/user/${JSON.stringify(user)}`}\r\n              >\r\n                <Box textAlign=\"right\" mt={6} mr={2}>\r\n                  <Button size=\"small\" variant=\"outlined\">\r\n                    View his Posts\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n            </Box>\r\n          </Card>\r\n        ))}\r\n        <Box textAlign=\"right\" mb={2} mr={2}>\r\n          <Button\r\n            onClick={() => this.getUser()}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            Load More\r\n          </Button>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  CardActionArea,\r\n  CardContent,\r\n  Card,\r\n  Grid,\r\n  CardActions,\r\n  Box,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport {\r\n  WorkRounded,\r\n  CheckCircleOutline,\r\n  HighlightOffOutlined\r\n} from \"@material-ui/icons\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { getRandomColor } from \"../utils\";\r\n\r\nexport default class Todos extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { todos: [], isLoaded: 0 };\r\n    this.getTodo = this.getTodo.bind(this);\r\n  }\r\n  async getTodo() {\r\n    await fetch(\r\n      `https://jsonplaceholder.typicode.com/todos/?_limit=6_&start=${this.state.isLoaded}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          todos: [...prevState.todos, ...data],\r\n          isLoaded: prevState.isLoaded + 5\r\n        }));\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.getTodo();\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"left\", fontSize: \"17px\" }}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Box textAlign=\"center\">\r\n              <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                Pending\r\n              </Typography>\r\n            </Box>\r\n            {this &&\r\n              this.state &&\r\n              this.state.todos &&\r\n              this.state.todos\r\n                .filter(todo => !todo.completed)\r\n                .map((todo, pIndex) => (\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: getRandomColor(),\r\n                      margin: 10\r\n                    }}\r\n                  >\r\n                    <CardActionArea>\r\n                      <CardContent style={{ width: 345, height: 100 }}>\r\n                        <WorkRounded />\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                        />\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                          {todo.title}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      {todo.completed ? (\r\n                        <CheckCircleOutline color=\"action\" />\r\n                      ) : (\r\n                        <HighlightOffOutlined color=\"error\" />\r\n                      )}\r\n                    </CardActions>\r\n                  </Card>\r\n                ))}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Box textAlign=\"center\">\r\n              <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                Completed\r\n              </Typography>\r\n            </Box>\r\n            {this &&\r\n              this.state &&\r\n              this.state.todos &&\r\n              this.state.todos\r\n                .filter(todo => todo.completed)\r\n                .map((todo, pIndex) => (\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: getRandomColor(),\r\n                      margin: 10\r\n                    }}\r\n                  >\r\n                    <CardActionArea>\r\n                      <CardContent style={{ width: 345, height: 100 }}>\r\n                        <WorkRounded />\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                        />\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                          {todo.title}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      {todo.completed ? (\r\n                        <CheckCircleOutline color=\"action\" />\r\n                      ) : (\r\n                        <HighlightOffOutlined color=\"error\" />\r\n                      )}\r\n                    </CardActions>\r\n                  </Card>\r\n                ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Button size=\"small\" variant=\"outlined\" onClick={() => this.getTodo()}>\r\n          Load More\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  CardContent,\r\n  Typography,\r\n  Card,\r\n  Box,\r\n  CardHeader,\r\n  Avatar,\r\n  Grid,\r\n  CardMedia,\r\n  CardActionArea,\r\n  CardActions,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { CloudDownload } from \"@material-ui/icons\";\r\nimport { getRandomColor } from \"../utils\";\r\n\r\nconst picture = {\r\n  albumId: 1,\r\n  id: 1,\r\n  title: \"accusamus beatae ad facilis cum similique qui sunt\",\r\n  url: \"https://via.placeholder.com/600/92c952\",\r\n  thumbnailUrl: \"https://via.placeholder.com/150/92c952\"\r\n};\r\nconst PicturesList = () => {\r\n  return (\r\n    <Grid container>\r\n      {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map(_ => (\r\n        <Card style={{ margin: 10, maxWidth: \"200px\" }}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"Contemplative Reptile\"\r\n              height=\"140\"\r\n              image={picture.thumbnailUrl}\r\n              title={picture.title}\r\n            />\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <IconButton onClick={() => picture.url}>\r\n              <CloudDownload />\r\n            </IconButton>\r\n            <Typography component=\"body2\" variant=\"body2\">\r\n              {picture.title}\r\n            </Typography>\r\n          </CardActions>\r\n        </Card>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\nexport default class Friends extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { users: [], isLoaded: 0 };\r\n    this.getUser = this.getUser.bind(this);\r\n  }\r\n  async getUser() {\r\n    await fetch(\r\n      `https://jsonplaceholder.typicode.com/users/?_limit=1_&start=${this.state.isLoaded}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          users: [...prevState.users, ...data],\r\n          isLoaded: prevState.isLoaded + 5\r\n        }));\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.getUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"left\", fontSize: \"17px\" }}>\r\n        {// this && */}\r\n        // this.state &&\r\n        // this.state.user &&\r\n        this.state.users.map((user, pIndex) => (\r\n          <Card key={pIndex} style={{ margin: \"15px\" }}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Box\r\n                key={user.username}\r\n                style={{ marginLeft: \"25px\" }}\r\n                textAlign=\"left\"\r\n              >\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      fontSize=\"small\"\r\n                      style={{ backgroundColor: getRandomColor() }}\r\n                    >\r\n                      {user.name.charAt(0)}\r\n                    </Avatar>\r\n                  }\r\n                  title={user.name}\r\n                  subheader={user.email}\r\n                />\r\n                <CardContent>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    @{user.username}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Box>\r\n            </Box>\r\n            <Box textAlign=\"center\">\r\n              <PicturesList />\r\n            </Box>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  CardContent,\r\n  Card,\r\n  Button,\r\n  Box,\r\n  Avatar,\r\n  CardHeader\r\n} from \"@material-ui/core\";\r\nimport { QuestionAnswer } from \"@material-ui/icons\";\r\n\r\nimport { getRandomColor } from \"../utils\";\r\nexport default class PostComments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comments: [],\r\n      isLoaded: 0\r\n    };\r\n    this.getComments = this.getComments.bind(this);\r\n  }\r\n  getComments = () => {\r\n    fetch(\r\n      `https://jsonplaceholder.typicode.com/posts/${\r\n        JSON.parse(this.props.match.params.post).id\r\n      }/comments/?_limit=5_&start=${this.state.isLoaded}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          comments: [...prevState.comments, ...data],\r\n          isLoaded: prevState.isLoaded + 5\r\n        }));\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getComments();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      JSON.parse(this.props.match.params.post).id !==\r\n      JSON.parse(prevProps.match.params.post).id\r\n    ) {\r\n      // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\r\n      this.getComments();\r\n    }\r\n  }\r\n  render() {\r\n    const post = JSON.parse(this.props.match.params.post);\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Box textAlign=\"right\" mt={2} mr={2}>\r\n            <Link style={{ textDecoration: \"none\" }} to={`/feed`}>\r\n              <Button size=\"small\" variant=\"outlined\">\r\n                Back to Posts\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n          <br />\r\n          <CardContent>\r\n            <Box textAlign=\"center\">\r\n              <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\r\n                {post.title}\r\n              </Typography>\r\n            </Box>\r\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n              {post.body}\r\n            </Typography>\r\n          </CardContent>\r\n          <Box textAlign=\"left\">\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar style={{ backgroundColor: \"green\" }}>\r\n                  <QuestionAnswer />\r\n                </Avatar>\r\n              }\r\n              title=\"Comments\"\r\n              subheader=\"Others view on this post\"\r\n            />\r\n          </Box>\r\n          {this.state.comments.map(comment => (\r\n            <Box\r\n              key={comment.id}\r\n              style={{ marginLeft: \"25px\" }}\r\n              textAlign=\"left\"\r\n            >\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    fontSize=\"small\"\r\n                    style={{ backgroundColor: getRandomColor() }}\r\n                  >\r\n                    {comment.name.charAt(0)}\r\n                  </Avatar>\r\n                }\r\n                title={comment.name}\r\n                subheader={comment.email}\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {comment.body}\r\n                </Typography>\r\n              </CardContent>\r\n            </Box>\r\n          ))}\r\n          <Box textAlign=\"right\" mb={2} mr={2}>\r\n            <Button\r\n              onClick={() => this.getComments()}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n            >\r\n              Load More Comments\r\n            </Button>\r\n          </Box>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  Button,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardActions,\r\n  IconButton,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport { CloudDownload } from \"@material-ui/icons\";\r\nconst picture = {\r\n  albumId: 1,\r\n  id: 1,\r\n  title: \"accusamus beatae ad facilis cum similique qui sunt\",\r\n  url: \"https://via.placeholder.com/600/92c952\",\r\n  thumbnailUrl: \"https://via.placeholder.com/150/92c952\"\r\n};\r\nexport default class Photos extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      photos: [],\r\n      isLoaded: 0\r\n    };\r\n    this.getPhotos = this.getPhotos.bind(this);\r\n  }\r\n\r\n  getPhotos = () => {\r\n    fetch(\r\n      `https://jsonplaceholder.typicode.com/albums/${this.props.match.params.albumId}/photos/?_limit=5_&start=${this.state.isLoaded}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          photos: [...prevState.photos, ...data],\r\n          isLoaded: prevState.isLoaded + 5\r\n        }));\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getPhotos();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.albumId !== prevProps.match.params.albumId) {\r\n      // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\r\n      this.getPhotos();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link style={{ textDecoration: \"none\" }} to={`/albums`}>\r\n          <Button size=\"small\" variant=\"outlined\">\r\n            Back to Albums\r\n          </Button>\r\n        </Link>\r\n        <br />\r\n        {/* You are viewing the photos of album {this.props.match.params.albumId} */}\r\n        <div style={{ textAlign: \"left\" }}>\r\n          {this &&\r\n            this.state &&\r\n            this.state.photos &&\r\n            this.state.photos.map((photo, pIndex) => (\r\n              <Card style={{ margin: 10, maxWidth: \"200px\" }}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    height=\"140\"\r\n                    image={picture.thumbnailUrl}\r\n                    title={picture.title}\r\n                  />\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <IconButton onClick={() => picture.url}>\r\n                    <CloudDownload />\r\n                  </IconButton>\r\n                  <Typography component=\"body2\" variant=\"body2\">\r\n                    {picture.title}\r\n                  </Typography>\r\n                </CardActions>\r\n              </Card>\r\n            ))}\r\n          <Box textAlign=\"right\" mb={2} mr={2}>\r\n            <Button\r\n              onClick={() => this.getPhotos()}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n            >\r\n              Load More\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  CardContent,\r\n  Card,\r\n  Button,\r\n  Box,\r\n  Avatar,\r\n  CardHeader\r\n} from \"@material-ui/core\";\r\nimport { AspectRatioRounded } from \"@material-ui/icons\";\r\n\r\nimport { getRandomColor } from \"../utils\";\r\nexport default class UserPosts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      isLoaded: 0\r\n    };\r\n    this.getPosts = this.getPosts.bind(this);\r\n  }\r\n  getPosts = () => {\r\n    fetch(\r\n      `https://jsonplaceholder.typicode.com/posts?userId${\r\n        JSON.parse(this.props.match.params.user).id\r\n      }&&_limit=5_&start=${this.state.isLoaded}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          posts: [...prevState.posts, ...data],\r\n          isLoaded: prevState.isLoaded + 5\r\n        }));\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getPosts();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      JSON.parse(this.props.match.params.user).id !==\r\n      JSON.parse(prevProps.match.params.user).id\r\n    ) {\r\n      // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\r\n      this.getPosts();\r\n    }\r\n  }\r\n  render() {\r\n    const user = JSON.parse(this.props.match.params.user);\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Box textAlign=\"right\" mt={2} mr={2}>\r\n            <Link style={{ textDecoration: \"none\" }} to={`/friends`}>\r\n              <Button size=\"small\" variant=\"outlined\">\r\n                Back to Friends List\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n\r\n          <br />\r\n          <Box textAlign=\"left\">\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar style={{ backgroundColor: \"green\" }}>\r\n                  {user.name.charAt(0)}\r\n                </Avatar>\r\n              }\r\n              title={user.name}\r\n              subheader={user.email}\r\n            />\r\n          </Box>\r\n          {this.state.posts.map(post => (\r\n            <Box key={post.id} style={{ marginLeft: \"25px\" }} textAlign=\"left\">\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    fontSize=\"small\"\r\n                    style={{ backgroundColor: getRandomColor() }}\r\n                  >\r\n                    <AspectRatioRounded />\r\n                  </Avatar>\r\n                }\r\n                title={post.title}\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {post.body}\r\n                </Typography>\r\n              </CardContent>\r\n            </Box>\r\n          ))}\r\n          <Box textAlign=\"right\" mb={2} mr={2}>\r\n            <Button\r\n              onClick={() => this.getPosts()}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n            >\r\n              Load More Posts of the user\r\n            </Button>\r\n          </Box>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Box, Container, Grid, Button, TextField } from \"@material-ui/core\";\r\nimport instaBook from \"../assets/InstaBook.jpg\";\r\nexport default function Login({ data, handleChangeLoginState }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const handleEmailChange = e => {\r\n    if (e.target.value) setEmail(e.target.value);\r\n  };\r\n  const handlePasswordChange = e => {\r\n    if (e.target.value) setPassword(e.target.value);\r\n  };\r\n  const handleSignIn = () => {\r\n    if (email === data.email && password === data.password) {\r\n      handleChangeLoginState(true);\r\n    } else {\r\n      alert(\"Invalid Email/Password\");\r\n    }\r\n  };\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Box textAlign=\"center\">\r\n            <Container maxWidth=\"lg\">\r\n              <Box>\r\n                <Box\r\n                  style={{\r\n                    fontSize: \"52px\",\r\n                    fontWeight: \"bold\",\r\n\r\n                    fontFamily: \"Squada One\",\r\n                    color: \"#ed1a1a\"\r\n                  }}\r\n                  mt={6}\r\n                >\r\n                  <img alt=\"instaBookLogo\" src={instaBook} />\r\n                </Box>\r\n                <Box\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    fontWeight: \"600\"\r\n                  }}\r\n                >\r\n                  Sign in\r\n                </Box>\r\n                <form>\r\n                  <Box mt={2}>\r\n                    <label>\r\n                      <TextField\r\n                        value={email}\r\n                        onChange={handleEmailChange}\r\n                        id=\"Email\"\r\n                        label=\"Email Address\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <br />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                      <TextField\r\n                        value={password}\r\n                        onChange={handlePasswordChange}\r\n                        id=\"Password\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                      />\r\n                    </label>\r\n                  </Box>\r\n                  <Box mt={3}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      onClick={handleSignIn}\r\n                    >\r\n                      Sign in\r\n                    </Button>\r\n                  </Box>{\" \"}\r\n                </form>\r\n              </Box>\r\n            </Container>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { TopNavBar } from \"./components/TopNav\";\nimport { SideBar } from \"./components/SideBar\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport {\n  PhotoLibraryRounded,\n  AspectRatioRounded,\n  PeopleRounded,\n  WorkRounded,\n  AccountCircleRounded,\n  PowerSettingsNewRounded\n} from \"@material-ui/icons\";\nimport Feed from \"./Feed/index.js\";\nimport Album from \"./Album/index.js\";\nimport Friends from \"./Friends/index.js\";\nimport Tasks from \"./Tasks/index.js\";\nimport Myprofile from \"./MyProfile/index.js\";\nimport PostComments from \"./Feed/PostComments\";\nimport photos from \"./Album/Photos\";\nimport UserPosts from \"./Friends/UserPosts\";\nimport Login from \"./Login/index.js\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nexport const menu = [\n  {\n    text: \"Albums\",\n    icon: <PhotoLibraryRounded />,\n    path: \"/albums\",\n    component: Album\n  },\n  {\n    text: \"Feed\",\n    icon: <AspectRatioRounded />,\n    path: \"/feed\",\n    component: Feed\n  },\n  {\n    text: \"Friends\",\n    icon: <PeopleRounded />,\n    path: \"/friends\",\n    component: Friends\n  },\n  {\n    text: \"Tasks\",\n    icon: <WorkRounded />,\n    path: \"/tasks\",\n    component: Tasks\n  },\n  {\n    text: \"My Profile\",\n    icon: <AccountCircleRounded />,\n    path: \"/myProfile\",\n    component: Myprofile\n  }\n];\n\nexport const logoutItem = {\n  text: \"Logout\",\n  icon: <PowerSettingsNewRounded />\n};\n\nexport const secondMenu = [];\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [state, setState] = useState({\n    isLoggedIn: false,\n    email: \"test@test.com\",\n    password: \"password\"\n  });\n\n  // const location = useLocation();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const handleChangeLoginState = status => {\n    setState(prevState => ({\n      ...prevState,\n      isLoggedIn: status\n    }));\n  };\n\n  return state.isLoggedIn ? (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        {/* <Route path=\"/login\" component={Login} /> */}\n        {/* {!location.pathname.includes(\"login\") && ( */}\n        <div className={classes.root}>\n          <CssBaseline />\n          <TopNavBar\n            theme={theme}\n            classes={classes}\n            handleDrawerClose={handleDrawerClose}\n            handleDrawerOpen={handleDrawerOpen}\n            open={true}\n          />\n          <SideBar\n            classes={classes}\n            theme={theme}\n            handleDrawerClose={handleDrawerClose}\n            handleDrawerOpen={handleDrawerOpen}\n            open={open}\n            handleChangeLoginState={handleChangeLoginState}\n          />\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: true\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <Switch>\n              <Route\n                path=\"/\"\n                exact\n                render={props => <Redirect {...props} to={\"/albums\"} />}\n              />\n              <Route path=\"/post/:post\" component={PostComments} />\n              <Route path=\"/album/:albumId\" component={photos} />\n              <Route path=\"/user/:user\" component={UserPosts} />\n              {/* <Route path=\"/login\" component={Login} /> */}\n\n              {menu.map((menuItem, index) => (\n                <Route\n                  key={index}\n                  path={menuItem.path}\n                  component={menuItem.component}\n                />\n              ))}\n            </Switch>\n          </main>\n        </div>\n        {/* )} */}\n      </div>\n    </Router>\n  ) : (\n    <Login handleChangeLoginState={handleChangeLoginState} data={state} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}